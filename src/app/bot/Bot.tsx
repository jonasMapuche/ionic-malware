import { IonBackButton, IonButtons, IonContent, IonFabButton, IonFooter, IonHeader, IonIcon, IonItem, IonItemGroup, IonLabel, IonList, IonMenuButton, IonNote, IonPage, IonSpinner, IonText, IonTextarea, IonTitle, IonToolbar, useIonRouter } from '@ionic/react';
import './Bot.css';
import { checkmarkDoneOutline, send } from 'ionicons/icons';
import { postBot } from '../service/Http-bot';
import { Message } from '../model/Message';
import { getMalware } from '../service/Http-malware';
import { ItemMalware, Malware } from '../model/Malware';
import { useSenderMessage } from '../component/useSenderMessage';
import { useRef, useState } from 'react';

const Bot: React.FC = () => {
  const navigation = useIonRouter();

  const goHome = () => {
    navigation.push("./home", "forward", "replace");
  };

  const { takeMessage, messages, filterByName } = useSenderMessage();

  const ref = useRef(null);

  const sendMessage = () => {
    takeMessage(ref.current.value, 2);
    console.log(messages);
  }

  const initialize = () => {
    const body: any = {id: 1, sender: 1, message: 'What can I do?'};
    const bot = postBot(body).then(response=>{
      const list: Message = new Message(response.data.id, response.data.sender, response.data.message);
      takeMessage(list.message, list.sender);
      const malware = getMalware().then(response=>{
        const list2: Array<Malware> = [];
        response.data.forEach((index: any) => {
          const item: ItemMalware= new ItemMalware(index.malware.export, index.malware.framework, index.malware.name, index.malware.rank, index.malware.description);
          const obj: Malware = new Malware(index.malware.name, item);
          list2.push(obj);
        });
        var msg1: string = "";
        list2.filter(filterByName).map(v=>v.name).forEach(msg => {
          msg1 = msg1 + " " + msg;
        });
        takeMessage(msg1, 1);
      });
    });

  }
    
  return (
    <IonPage>
      <IonHeader>
        <IonToolbar>
          <IonButtons slot="start" onClick={ () => goHome() }>
            <IonBackButton default-href=""></IonBackButton>
          </IonButtons>
          <IonTitle></IonTitle>
        </IonToolbar>
      </IonHeader>
      <IonContent fullscreen>
        <IonList>
            <IonItemGroup>
              {messages.map((list, index) => (
                <IonItem lines="none" className={(list.sender==1)? "sender-item" : "user-item"} key={index}>
                  <IonLabel slot={(list.sender==1)? "start" : "end"} className={(list.sender==1)? "sender-label" : "user-label"}>
                    <IonText className={(list.sender==1)? "sender-text" : "user-text"}>{list.message}</IonText>
                    <IonNote className={(list.sender==1)? "sender-note" : "user-note"}>
                      <IonIcon icon={checkmarkDoneOutline} color='#ffffff'></IonIcon>
                    </IonNote>
                  </IonLabel>
                </IonItem>
              ))}
            </IonItemGroup>
        </IonList>
      </IonContent>
      <IonFooter className="footer-bot">
        <IonToolbar className="footer-bot">
          <IonTextarea
            placeholder="Send message"
            className="message-bot"
            name="message"
            ref={ref}>
          </IonTextarea>
          <IonButtons slot="end" className="footer-bot">
            <IonFabButton size="small" className="fab-bot" onClick={sendMessage}>
              <IonIcon icon={send}></IonIcon>
            </IonFabButton>
          </IonButtons>
        </IonToolbar>
      </IonFooter>
    </IonPage>
  );
};

export default Bot;
