import { IonBackButton, IonButtons, IonContent, IonFabButton, IonFooter, IonHeader, IonIcon, IonItem, IonItemGroup, IonLabel, IonList, IonMenuButton, IonNote, IonPage, IonSpinner, IonText, IonTextarea, IonTitle, IonToolbar, useIonRouter } from '@ionic/react';
import './Bot.css';
import { checkmarkDoneOutline, send } from 'ionicons/icons';
import { postBot } from '../service/Http-bot';
import { useEffect, useRef, useState } from 'react';
import { useParams } from 'react-router';
import React from 'react';

const Bot: React.FC = () => {
  const navigation = useIonRouter();

  const { name } = useParams<{ name: string; }>();

  const goHome = () => {
    navigation.push("./home", "forward", "replace");
  };

  const body: any = {id: 1, sender: 1, message: 'What can I do?'};

  const [itens, setItens] = useState<any[]>([]);

  useEffect(() => {
    postBot(body)
    .then((response) => {
                          let msg: string = ""; 
                          if (name=="null") {msg = response.data.message} else {msg = name}; 
                          const message = {
                            id: response.data.id,
                            sender: response.data.sender,
                            message: msg
                          };
                          const newMessage = [
                            {
                              id: message.id,
                              sender: message.sender,
                              message: message.message
                            },
                            ...itens
                          ];
                          setItens(newMessage);
                        })
  }, []);

  function search(obj: any[]) {
    return obj;
  };

  const sender = useRef(null);

  const sendMessage = (value: any) => {
    const msg = value.current.value;
    const body: any = {id: 1, sender: 2, message: msg};
    postBot(body)
    .then((response) => {
                          const message = {
                            id: response.data.id,
                            sender: response.data.sender,
                            message: response.data.message
                          };
                          const newMessage = [
                            {
                              id: message.id,
                              sender: message.sender,
                              message: message.message
                            },
                            ...itens
                          ];
                          setItens(newMessage);
                        });
  };

  return (
    <IonPage>
      <IonHeader>
        <IonToolbar>
          <IonButtons slot="start" onClick={ () => goHome() }>
            <IonBackButton default-href=""></IonBackButton>
          </IonButtons>
          <IonTitle></IonTitle>
        </IonToolbar>
      </IonHeader>
      <IonContent fullscreen>
        <IonList>
            <IonItemGroup>
              {search(itens).map((list, index) => (
                <IonItem lines="none" className={(list.sender==1)? "sender-item" : "user-item"} key={index}>
                  <IonLabel slot={(list.sender==1)? "start" : "end"} className={(list.sender==1)? "sender-label" : "user-label"}>
                    <IonText className={(list.sender==1)? "sender-text" : "user-text"}>{list.message}</IonText>
                    <IonNote className={(list.sender==1)? "sender-note" : "user-note"}>
                      <IonIcon icon={checkmarkDoneOutline} color='#ffffff'></IonIcon>
                    </IonNote>
                  </IonLabel>
                </IonItem>
              ))}
            </IonItemGroup>
        </IonList>
      </IonContent>
      <IonFooter className="footer-bot">
        <IonToolbar className="footer-bot">
          <IonTextarea
            placeholder="Send message"
            className="message-bot"
            name="message"
            ref={sender}>
          </IonTextarea>
          <IonButtons slot="end" className="footer-bot">
            <IonFabButton size="small" className="fab-bot" onClick={ () => sendMessage(sender) }>
              <IonIcon icon={send}></IonIcon>
            </IonFabButton>
          </IonButtons>
        </IonToolbar>
      </IonFooter>
    </IonPage>
  );
};

export default Bot;
