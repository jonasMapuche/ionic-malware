import { IonAlert, IonButton, IonButtons, IonContent, IonFab, IonFabButton, IonHeader, IonIcon, IonItem, IonLabel, IonMenuButton, IonPage, IonTitle, IonToolbar, useIonRouter } from '@ionic/react';
import './Home.css';
import { add, ellipsisVertical, send } from 'ionicons/icons';
import { getFramework } from '../service/Http-malware';
import React, { useEffect, useState } from 'react';
import { ItemMalware } from '../model/Malware';

const Home: React.FC = () => {
  const navigation = useIonRouter()
  
  const goSetting = () => {
    navigation.push("./setting", "forward", "replace");
  }

  const goBot = () => {
    navigation.push("./bot", "forward", "replace");
  }

  function filterByFramework(obj: any) {
    if (obj == "watts") {
      return true;
    } else {
      return false;
    }
  }

  function filterByName(obj: any) {
    if (obj.name.filter("jab")) {
      return true;
    } else {
      return false;
    }
  }

  const [objs, setObjs] = useState<any[]>([]);
  const [itens, setItens] = useState<any[]>([]);

  useEffect(() => {
    getFramework("blow")
    .then((response) => {
                          setObjs(response.data);
                          setItens(response.data);
                        })
  }, []);

  const [searchParam] = useState(["name"]);

  function search(itens: any[]) {
    return itens.filter((index: { malware: any; })=>index.malware).filter((index: { name: string; })=>(index.name=="borboleta" || index.name=="jab"  || index.name=="crawl" || index.name=="uppercut" || index.name=="direto" || index.name=="cruzado" || index.name=="costas"));
  };

  return (
    <IonPage>
      <IonHeader>
        <IonToolbar>
          <IonButtons slot="start">
            <IonMenuButton></IonMenuButton>
          </IonButtons>
          <IonButtons slot="primary" id="setting-alert">
            <IonButton>
              <IonIcon slot="icon-only" icon={ellipsisVertical}></IonIcon>
            </IonButton>
          </IonButtons>
          <IonTitle></IonTitle>
        </IonToolbar>
      </IonHeader>
      <IonContent fullscreen>
        {/*
        objs && objs.map((malware) => (
          <IonItem key={malware._id} button lines="full" className="list-home">
            <IonLabel>{malware.name}</IonLabel>
          </IonItem>
        ))
        */}
        {search(itens).map((item) => ( 
          <IonItem key={item._id} button lines="full" className="list-home">
            <IonLabel>{item.name}</IonLabel>
          </IonItem>
        ))}â€Œ
      </IonContent>
      <IonAlert className="setting-home"
        trigger="setting-alert"
        buttons={[
          {
            text: 'Setting',
            handler: () => {
              //console.log("Setting");
              //navigation.push("/setting", "forward", "replace");
              goSetting();
            }
          }
        ]}>
      </IonAlert>
      <IonFab slot="fixed" vertical="bottom" horizontal="end">
        <IonFabButton className="fab-home" onClick={goBot}>
          <IonIcon icon={add}></IonIcon>
        </IonFabButton>
      </IonFab>
    </IonPage>
  );
};

export default Home;
